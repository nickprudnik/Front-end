{"ast":null,"code":"import axios from '../../data';\nimport actionTypes from './actionTypes';\nexport function setUserRequestData(request) {\n  return {\n    type: actionTypes.USER_REQUEST,\n    request: request\n  };\n}\nexport function setSelectedFlightInfo(flightInfo) {\n  return {\n    type: actionTypes.USER_SELECTED_FLIGHT_INFO,\n    flightInfo: flightInfo\n  };\n}\nexport function getPlaneLayout(layout) {\n  return {\n    type: actionTypes.PLANE_LAYOUT,\n    layout: layout\n  };\n}\nexport function fetchPlaneLayout(id) {\n  return function (dispatch) {\n    axios.get('/planes').then(function (response) {\n      if (!response.data) {\n        throw Error(response.statusText);\n      }\n\n      return response;\n    }).then(function (response) {\n      return response.data[id];\n    }).then(function (planeLayout) {\n      return dispatch(getPlaneLayout(planeLayout));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n}\nexport function setTotalPrice(price) {\n  return {\n    type: actionTypes.USER_TOTAL_PRICE,\n    price: price\n  };\n}\nexport function setPassengersInfo(info) {\n  return {\n    type: actionTypes.PASSENGERS_INFO,\n    info: info\n  };\n}\nexport function selectPassenger(id) {\n  return {\n    type: actionTypes.SELECTED_PASSENGER,\n    id: id\n  };\n}","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\redux\\user\\actions.js"],"names":["axios","actionTypes","setUserRequestData","request","type","USER_REQUEST","setSelectedFlightInfo","flightInfo","USER_SELECTED_FLIGHT_INFO","getPlaneLayout","layout","PLANE_LAYOUT","fetchPlaneLayout","id","dispatch","get","then","response","data","Error","statusText","planeLayout","catch","error","console","log","setTotalPrice","price","USER_TOTAL_PRICE","setPassengersInfo","info","PASSENGERS_INFO","selectPassenger","SELECTED_PASSENGER"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,SAASC,kBAAT,CAA4BC,OAA5B,EAAqC;AAC1C,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,YADb;AAELF,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;AAED,OAAO,SAASG,qBAAT,CAA+BC,UAA/B,EAA2C;AAChD,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACO,yBADb;AAELD,IAAAA,UAAU,EAAVA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,cAAT,CAAwBC,MAAxB,EAAgC;AACrC,SAAO;AACLN,IAAAA,IAAI,EAAEH,WAAW,CAACU,YADb;AAELD,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,gBAAT,CAA0BC,EAA1B,EAA8B;AACnC,SAAO,UAACC,QAAD,EAAc;AACnBd,IAAAA,KAAK,CAACe,GAAN,CAAU,SAAV,EACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,IAAd,EAAoB;AAClB,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACD;;AACD,aAAOH,QAAP;AACD,KANH,EAOGD,IAPH,CAOQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,CAAcL,EAAd,CAAJ;AAAA,KAPhB,EAQGG,IARH,CAQQ,UAAAK,WAAW;AAAA,aAAIP,QAAQ,CAACL,cAAc,CAACY,WAAD,CAAf,CAAZ;AAAA,KARnB,EASGC,KATH,CASS,UAAAC,KAAK;AAAA,aAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,KATd;AAUD,GAXD;AAYD;AAED,OAAO,SAASG,aAAT,CAAuBC,KAAvB,EAA8B;AACnC,SAAO;AACLvB,IAAAA,IAAI,EAAEH,WAAW,CAAC2B,gBADb;AAELD,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,iBAAT,CAA2BC,IAA3B,EAAiC;AACtC,SAAO;AACL1B,IAAAA,IAAI,EAAEH,WAAW,CAAC8B,eADb;AAELD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,eAAT,CAAyBnB,EAAzB,EAA6B;AAClC,SAAO;AACLT,IAAAA,IAAI,EAAEH,WAAW,CAACgC,kBADb;AAELpB,IAAAA,EAAE,EAAFA;AAFK,GAAP;AAID","sourcesContent":["import axios from '../../data';\nimport actionTypes from './actionTypes';\n\nexport function setUserRequestData(request) {\n  return {\n    type: actionTypes.USER_REQUEST,\n    request,\n  };\n}\n\nexport function setSelectedFlightInfo(flightInfo) {\n  return {\n    type: actionTypes.USER_SELECTED_FLIGHT_INFO,\n    flightInfo,\n  };\n}\n\nexport function getPlaneLayout(layout) {\n  return {\n    type: actionTypes.PLANE_LAYOUT,\n    layout,\n  };\n}\n\nexport function fetchPlaneLayout(id) {\n  return (dispatch) => {\n    axios.get('/planes')\n      .then((response) => {\n        if (!response.data) {\n          throw Error(response.statusText);\n        }\n        return response;\n      })\n      .then(response => response.data[id])\n      .then(planeLayout => dispatch(getPlaneLayout(planeLayout)))\n      .catch(error => console.log(error));\n  };\n}\n\nexport function setTotalPrice(price) {\n  return {\n    type: actionTypes.USER_TOTAL_PRICE,\n    price,\n  };\n}\n\nexport function setPassengersInfo(info) {\n  return {\n    type: actionTypes.PASSENGERS_INFO,\n    info,\n  };\n}\n\nexport function selectPassenger(id) {\n  return {\n    type: actionTypes.SELECTED_PASSENGER,\n    id,\n  };\n}"]},"metadata":{},"sourceType":"module"}