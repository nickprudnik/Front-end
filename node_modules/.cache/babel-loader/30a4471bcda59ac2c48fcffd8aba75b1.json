{"ast":null,"code":"import _objectSpread from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport actionTypes from './actionTypes'; // const initialState = {\n//   request: {},\n//   selectedFlight: {},\n//   planeLayout: {\n//     rows: 0,\n//     location: [],\n//   },\n//   totalPrice: 0,\n//   passengersInfo: [],\n//   selectedPassenger: 0,\n// };\n\nfunction userState() {\n  return {\n    request: {},\n    selectedFlight: {},\n    planeLayout: {\n      rows: 0,\n      location: []\n    },\n    totalPrice: 0,\n    passengersInfo: [],\n    selectedPassenger: 0\n  };\n}\n\nexport default function user() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.USER_REQUEST:\n      return _objectSpread({}, state, {\n        request: action.request\n      });\n\n    case actionTypes.USER_SELECTED_FLIGHT_INFO:\n      return _objectSpread({}, state, {\n        selectedFlight: action.flightInfo\n      });\n\n    case actionTypes.PLANE_LAYOUT:\n      return _objectSpread({}, state, {\n        planeLayout: action.layout\n      });\n\n    case actionTypes.USER_TOTAL_PRICE:\n      return _objectSpread({}, state, {\n        totalPrice: state.totalPrice ? +state.totalPrice + +action.price : +action.price\n      });\n\n    case actionTypes.PASSENGERS_INFO:\n      return _objectSpread({}, state, {\n        passengersInfo: action.info\n      });\n\n    case actionTypes.SELECTED_PASSENGER:\n      return _objectSpread({}, state, {\n        selectedPassenger: action.id\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\redux\\user\\reducers.js"],"names":["actionTypes","userState","request","selectedFlight","planeLayout","rows","location","totalPrice","passengersInfo","selectedPassenger","user","state","initialState","action","type","USER_REQUEST","USER_SELECTED_FLIGHT_INFO","flightInfo","PLANE_LAYOUT","layout","USER_TOTAL_PRICE","price","PASSENGERS_INFO","info","SELECTED_PASSENGER","id"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,SAAT,GAAsB;AACpB,SAAO;AACLC,IAAAA,OAAO,EAAE,EADJ;AAELC,IAAAA,cAAc,EAAE,EAFX;AAGLC,IAAAA,WAAW,EAAE;AACbC,MAAAA,IAAI,EAAE,CADO;AAEbC,MAAAA,QAAQ,EAAE;AAFG,KAHR;AAOLC,IAAAA,UAAU,EAAE,CAPP;AAQLC,IAAAA,cAAc,EAAE,EARX;AASLC,IAAAA,iBAAiB,EAAE;AATd,GAAP;AAWC;;AAGH,eAAe,SAASC,IAAT,GAA4C;AAAA,MAA9BC,KAA8B,uEAAtBC,YAAsB;AAAA,MAARC,MAAQ;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,WAAW,CAACe,YAAjB;AACE,+BACKJ,KADL;AAEET,QAAAA,OAAO,EAAEW,MAAM,CAACX;AAFlB;;AAIF,SAAKF,WAAW,CAACgB,yBAAjB;AACE,+BACKL,KADL;AAEER,QAAAA,cAAc,EAAEU,MAAM,CAACI;AAFzB;;AAIF,SAAKjB,WAAW,CAACkB,YAAjB;AACE,+BACKP,KADL;AAEEP,QAAAA,WAAW,EAAES,MAAM,CAACM;AAFtB;;AAIF,SAAKnB,WAAW,CAACoB,gBAAjB;AACE,+BACKT,KADL;AAEEJ,QAAAA,UAAU,EAAEI,KAAK,CAACJ,UAAN,GAAmB,CAACI,KAAK,CAACJ,UAAP,GAAoB,CAACM,MAAM,CAACQ,KAA/C,GAAuD,CAACR,MAAM,CAACQ;AAF7E;;AAIF,SAAKrB,WAAW,CAACsB,eAAjB;AACE,+BACKX,KADL;AAEEH,QAAAA,cAAc,EAAEK,MAAM,CAACU;AAFzB;;AAIF,SAAKvB,WAAW,CAACwB,kBAAjB;AACE,+BACKb,KADL;AAEEF,QAAAA,iBAAiB,EAAEI,MAAM,CAACY;AAF5B;;AAIF;AACE,aAAOd,KAAP;AAhCJ;AAkCD","sourcesContent":["import actionTypes from './actionTypes';\n\n// const initialState = {\n//   request: {},\n//   selectedFlight: {},\n//   planeLayout: {\n//     rows: 0,\n//     location: [],\n//   },\n//   totalPrice: 0,\n//   passengersInfo: [],\n//   selectedPassenger: 0,\n// };\n\nfunction userState () {\n  return {\n    request: {},\n    selectedFlight: {},\n    planeLayout: {\n    rows: 0,\n    location: [],\n  },\n    totalPrice: 0,\n    passengersInfo: [],\n    selectedPassenger: 0,\n};\n  }\n\n\nexport default function user(state = initialState, action) {\n  switch (action.type) {\n    case actionTypes.USER_REQUEST:\n      return {\n        ...state,\n        request: action.request,\n      };\n    case actionTypes.USER_SELECTED_FLIGHT_INFO:\n      return {\n        ...state,\n        selectedFlight: action.flightInfo,\n      };\n    case actionTypes.PLANE_LAYOUT:\n      return {\n        ...state,\n        planeLayout: action.layout,\n      };\n    case actionTypes.USER_TOTAL_PRICE:\n      return {\n        ...state,\n        totalPrice: state.totalPrice ? +state.totalPrice + +action.price : +action.price,\n      };\n    case actionTypes.PASSENGERS_INFO:\n      return {\n        ...state,\n        passengersInfo: action.info,\n      };\n    case actionTypes.SELECTED_PASSENGER:\n      return {\n        ...state,\n        selectedPassenger: action.id,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}