{"ast":null,"code":"import { getPlainShema } from \"../../../api\";\nimport { PLANES_HAS_ERRORED, PLANES_IS_LOADING, PLANES_FETCH_DATA_SUCCESS } from \"../actionTypes\";\nexport function hasErrored(bool) {\n  return {\n    type: PLANES_HAS_ERRORED,\n    hasErrored: bool\n  };\n}\nexport function isLoading(bool) {\n  return {\n    type: PLANES_IS_LOADING,\n    isLoading: bool\n  };\n}\nexport function fetchDataSuccess(items) {\n  return {\n    type: PLANES_FETCH_DATA_SUCCESS,\n    items: items\n  };\n}\nexport function planeFetchData() {\n  return function (dispatch) {\n    dispatch(isLoading(true));\n    getPlainShema().then(function (response) {\n      if (!response.data.plane.length) {\n        throw Error(response.statusText);\n      }\n\n      dispatch(isLoading(false));\n      return response;\n    }).then(function (response) {\n      return response.data.plane;\n    }).then(function (plane) {\n      return dispatch(fetchDataSuccess(plane));\n    }).catch(function () {\n      dispatch(hasErrored(true));\n    });\n  };\n}","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\redux\\search\\planeShema\\actions.js"],"names":["getPlainShema","PLANES_HAS_ERRORED","PLANES_IS_LOADING","PLANES_FETCH_DATA_SUCCESS","hasErrored","bool","type","isLoading","fetchDataSuccess","items","planeFetchData","dispatch","then","response","data","plane","length","Error","statusText","catch"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACEC,kBADF,EAEEC,iBAFF,EAGEC,yBAHF,QAIO,gBAJP;AAMA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAEL,kBADD;AAELG,IAAAA,UAAU,EAAEC;AAFP,GAAP;AAID;AAED,OAAO,SAASE,SAAT,CAAmBF,IAAnB,EAAyB;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,iBADD;AAELK,IAAAA,SAAS,EAAEF;AAFN,GAAP;AAID;AAED,OAAO,SAASG,gBAAT,CAA0BC,KAA1B,EAAiC;AACtC,SAAO;AACLH,IAAAA,IAAI,EAAEH,yBADD;AAELM,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,cAAT,GAA0B;AAC/B,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAACJ,SAAS,CAAC,IAAD,CAAV,CAAR;AAEAP,IAAAA,aAAa,GACVY,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChB,UAAI,CAACA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,MAAzB,EAAiC;AAC/B,cAAMC,KAAK,CAACJ,QAAQ,CAACK,UAAV,CAAX;AACD;;AAEDP,MAAAA,QAAQ,CAACJ,SAAS,CAAC,KAAD,CAAV,CAAR;AAEA,aAAOM,QAAP;AACD,KATH,EAUGD,IAVH,CAUQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,CAAcC,KAAlB;AAAA,KAVhB,EAWGH,IAXH,CAWQ,UAAAG,KAAK;AAAA,aAAIJ,QAAQ,CAACH,gBAAgB,CAACO,KAAD,CAAjB,CAAZ;AAAA,KAXb,EAYGI,KAZH,CAYS,YAAM;AACXR,MAAAA,QAAQ,CAACP,UAAU,CAAC,IAAD,CAAX,CAAR;AACD,KAdH;AAeD,GAlBD;AAmBD","sourcesContent":["import { getPlainShema } from \"../../../api\";\r\nimport {\r\n  PLANES_HAS_ERRORED,\r\n  PLANES_IS_LOADING,\r\n  PLANES_FETCH_DATA_SUCCESS\r\n} from \"../actionTypes\";\r\n\r\nexport function hasErrored(bool) {\r\n  return {\r\n    type: PLANES_HAS_ERRORED,\r\n    hasErrored: bool\r\n  };\r\n}\r\n\r\nexport function isLoading(bool) {\r\n  return {\r\n    type: PLANES_IS_LOADING,\r\n    isLoading: bool\r\n  };\r\n}\r\n\r\nexport function fetchDataSuccess(items) {\r\n  return {\r\n    type: PLANES_FETCH_DATA_SUCCESS,\r\n    items\r\n  };\r\n}\r\n\r\nexport function planeFetchData() {\r\n  return dispatch => {\r\n    dispatch(isLoading(true));\r\n\r\n    getPlainShema()\r\n      .then(response => {\r\n        if (!response.data.plane.length) {\r\n          throw Error(response.statusText);\r\n        }\r\n\r\n        dispatch(isLoading(false));\r\n\r\n        return response;\r\n      })\r\n      .then(response => response.data.plane)\r\n      .then(plane => dispatch(fetchDataSuccess(plane)))\r\n      .catch(() => {\r\n        dispatch(hasErrored(true));\r\n      });\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}