{"ast":null,"code":"// const axios = require(\"axios\");\n// const MockAdapter = require(\"axios-mock-adapter\");\n// const mock = new MockAdapter(axios);\n// mock.onGet(\"/tickets\").reply(200, {\n//   tickets: [\n//     {\n//       id: 1,\n//       dateFrom: \"2019-03-25\",\n//       dateTo: \"2019-03-27\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       toCountry: \"Schönefeld Airport(Berlin,DE)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 2,\n//       dateFrom: \"2019-03-28\",\n//       dateTo: \"2019-03-30\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Tegel Airport(Berlin,DE)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 3,\n//       dateFrom: \"2019-03-28\",\n//       dateTo: \"2019-03-30\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       toCountry: \"Tegel Airport(Berlin,DE)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 4,\n//       dateFrom: \"2019-03-28\",\n//       dateTo: \"2019-03-30\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Schönefeld Airport(Berlin,DE)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 5,\n//       dateFrom: \"2019-05-04\",\n//       dateTo: \"2019-06-07\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Schönefeld Airport(Berlin,DE)\",\n//       toCountry: \"Schiphol Airport(Amsterdam, NLD)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 6,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       toCountry: \"Schiphol Airport(Amsterdam, NLD)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 7,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Schiphol Airport(Amsterdam, NLD)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 8,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Borispol Airoport(Kiev,UA)\",\n//       toCountry: \"Chopin Airport(Warsaw,PL)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 9,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Borispol Airoport(Kiev,UA)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 10,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       toCountry: \"Borispol Airoport(Kiev,UA)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 11,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Sheremetyevo Airport(Moscow, RUS)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR))\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 12,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Vilnius Airport(Vilnius, LT)\",\n//       toCountry: \"Tallinn Airport(Tallinn, EE)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 13,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Riga Airport(Riga, LV)\",\n//       toCountry: \"Juliani Airport(Kiev,UA)\",\n//       price: \"125\",\n//       planeId: 1\n//     }\n//   ]\n// });\n// mock.onPost(\"/search-request\").reply(() => axios.get(\"/tickets\"));\n// mock.onGet(\"/best_deals\").reply(200, {\n//   bestdeals: [\n//     {\n//       id: 1,\n//       dateFrom: \"2019-03-25\",\n//       dateTo: \"2019-03-27\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk, BLR\",\n//       toCountry: \"Riga, LV\",\n//       price: \"$ 70\",\n//       planeId: 1\n//     },\n//     {\n//       id: 2,\n//       dateFrom: \"2019-03-28\",\n//       dateTo: \"2019-03-30\",\n//       startTime: \"7.30\",\n//       endTime: \"9.45\",\n//       fromCountry: \"Kiev, UA\",\n//       toCountry: \"Warsaw, PL\",\n//       price: \"$ 60\",\n//       planeId: 1\n//     },\n//     {\n//       id: 3,\n//       dateFrom: \"2019-03-31\",\n//       dateTo: \"2019-04-02\",\n//       startTime: \"10.30\",\n//       endTime: \"12.45\",\n//       fromCountry: \"Moscow, RUS\",\n//       toCountry: \"Vilnius, LT\",\n//       price: \"$ 65\",\n//       planeId: 1\n//     },\n//     {\n//       id: 4,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"2.30\",\n//       endTime: \"6.45\",\n//       fromCountry: \"Minsk, BLR\",\n//       toCountry: \"Kiev, UA\",\n//       price: \"$ 65\",\n//       planeId: 1\n//     },\n//     {\n//       id: 5,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"7.30\",\n//       endTime: \"10.45\",\n//       fromCountry: \"Kiev, UA\",\n//       toCountry: \"Tallinn, EE\",\n//       price: \"$ 35\",\n//       planeId: 1\n//     },\n//     {\n//       id: 6,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"1.30\",\n//       endTime: \"4.45\",\n//       fromCountry: \"Warsaw, PL\",\n//       toCountry: \"Amsterdam, NLD\",\n//       price: \"$ 40\",\n//       planeId: 1\n//     }\n//   ]\n// });\n// mock.onPost(\"/search_bestdeals\").reply(() => axios.get(\"/best_deals\"));\n// mock.onGet(\"/airports\").reply(200, {\n//   airports: [\n//     { name: \"Tegel Airport(Berlin,DE)\" },\n//     { name: \"Schönefeld Airport(Berlin,DE)\" },\n//     { name: \"Chopin Airport(Warsaw,PL)\" },\n//     { name: \"Borispol Airoport(Kiev,UA)\" },\n//     { name: \"Juliani Airport(Kiev,UA)\" },\n//     { name: \"Minsk-1 Airport(Minsk, BLR)\" },\n//     { name: \"Vilnius Airport(Vilnius, LT)\" },\n//     { name: \"Riga Airport(Riga, LV)\" },\n//     { name: \"Tallinn Airport(Tallinn, EE)\" },\n//     { name: \"Sheremetyevo Airport(Moscow, RUS)\" },\n//     { name: \"Domodedovo Airport(Moscow, RUS)\" },\n//     { name: \"Schiphol Airport(Amsterdam, NLD)\" }\n//   ]\n// });\n// mock.onGet(\"/news\").reply(200, {\n//   news: [\n//     {\n//       id: 1,\n//       new1: \"Brexit\",\n//       about: \"Start yout travel from here\",\n//       image:\n//         \"https://github.com/nickprudnik/Front-end/blob/test/src/components/carousel/Images/MINSK2.png?raw=true\"\n//     },\n//     {\n//       id: 2,\n//       new1: \"Minsk\",\n//       about: \"New travel regulations for UK passport holders\",\n//       image:\n//         \"https://github.com/nickprudnik/Front-end/blob/test/src/components/carousel/Images/PASSPORT.jpg?raw=true\"\n//     },\n//     {\n//       id: 3,\n//       new1: \"Your luggage\",\n//       about: \"New rules from 03/25/2019\",\n//       image:\n//         \"https://github.com/nickprudnik/Front-end/blob/test/src/components/carousel/Images/LUGGAGE.png?raw=true\"\n//     }\n//   ]\n// });\n// mock.onPost(\"/latest_news\").reply(() => axios.get(\"/news\"));\n// mock.onGet(\"/planeShemes\").reply(200, [\n//   {\n//     plane: {\n//       rows: 2,\n//       subRows: 6,\n//       seats: 10,\n//       bookedSeats: []\n//     }\n//   }\n// ]);\n// mock.onPost(\"/planeShemes\").reply(() => axios.get(\"/plane\"));\n// export default axios;","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\data\\index.js"],"names":[],"mappingssourcesContent":["// const axios = require(\"axios\");\n// const MockAdapter = require(\"axios-mock-adapter\");\n\n// const mock = new MockAdapter(axios);\n\n// mock.onGet(\"/tickets\").reply(200, {\n//   tickets: [\n//     {\n//       id: 1,\n//       dateFrom: \"2019-03-25\",\n//       dateTo: \"2019-03-27\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       toCountry: \"Schönefeld Airport(Berlin,DE)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 2,\n//       dateFrom: \"2019-03-28\",\n//       dateTo: \"2019-03-30\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Tegel Airport(Berlin,DE)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 3,\n//       dateFrom: \"2019-03-28\",\n//       dateTo: \"2019-03-30\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       toCountry: \"Tegel Airport(Berlin,DE)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 4,\n//       dateFrom: \"2019-03-28\",\n//       dateTo: \"2019-03-30\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Schönefeld Airport(Berlin,DE)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 5,\n//       dateFrom: \"2019-05-04\",\n//       dateTo: \"2019-06-07\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Schönefeld Airport(Berlin,DE)\",\n//       toCountry: \"Schiphol Airport(Amsterdam, NLD)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 6,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       toCountry: \"Schiphol Airport(Amsterdam, NLD)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 7,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Schiphol Airport(Amsterdam, NLD)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 8,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Borispol Airoport(Kiev,UA)\",\n//       toCountry: \"Chopin Airport(Warsaw,PL)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 9,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Borispol Airoport(Kiev,UA)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 10,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk-1 Airport(Minsk, BLR)\",\n//       toCountry: \"Borispol Airoport(Kiev,UA)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 11,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Sheremetyevo Airport(Moscow, RUS)\",\n//       toCountry: \"Minsk-1 Airport(Minsk, BLR))\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 12,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Vilnius Airport(Vilnius, LT)\",\n//       toCountry: \"Tallinn Airport(Tallinn, EE)\",\n//       price: \"125\",\n//       planeId: 1\n//     },\n//     {\n//       id: 13,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Riga Airport(Riga, LV)\",\n//       toCountry: \"Juliani Airport(Kiev,UA)\",\n//       price: \"125\",\n//       planeId: 1\n//     }\n//   ]\n// });\n\n// mock.onPost(\"/search-request\").reply(() => axios.get(\"/tickets\"));\n\n// mock.onGet(\"/best_deals\").reply(200, {\n//   bestdeals: [\n//     {\n//       id: 1,\n//       dateFrom: \"2019-03-25\",\n//       dateTo: \"2019-03-27\",\n//       startTime: \"6.30\",\n//       endTime: \"8.45\",\n//       fromCountry: \"Minsk, BLR\",\n//       toCountry: \"Riga, LV\",\n//       price: \"$ 70\",\n//       planeId: 1\n//     },\n//     {\n//       id: 2,\n//       dateFrom: \"2019-03-28\",\n//       dateTo: \"2019-03-30\",\n//       startTime: \"7.30\",\n//       endTime: \"9.45\",\n//       fromCountry: \"Kiev, UA\",\n//       toCountry: \"Warsaw, PL\",\n//       price: \"$ 60\",\n//       planeId: 1\n//     },\n//     {\n//       id: 3,\n//       dateFrom: \"2019-03-31\",\n//       dateTo: \"2019-04-02\",\n//       startTime: \"10.30\",\n//       endTime: \"12.45\",\n//       fromCountry: \"Moscow, RUS\",\n//       toCountry: \"Vilnius, LT\",\n//       price: \"$ 65\",\n//       planeId: 1\n//     },\n//     {\n//       id: 4,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"2.30\",\n//       endTime: \"6.45\",\n//       fromCountry: \"Minsk, BLR\",\n//       toCountry: \"Kiev, UA\",\n//       price: \"$ 65\",\n//       planeId: 1\n//     },\n//     {\n//       id: 5,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"7.30\",\n//       endTime: \"10.45\",\n//       fromCountry: \"Kiev, UA\",\n//       toCountry: \"Tallinn, EE\",\n//       price: \"$ 35\",\n//       planeId: 1\n//     },\n//     {\n//       id: 6,\n//       dateFrom: \"2019-04-02\",\n//       dateTo: \"2019-04-05\",\n//       startTime: \"1.30\",\n//       endTime: \"4.45\",\n//       fromCountry: \"Warsaw, PL\",\n//       toCountry: \"Amsterdam, NLD\",\n//       price: \"$ 40\",\n//       planeId: 1\n//     }\n//   ]\n// });\n\n// mock.onPost(\"/search_bestdeals\").reply(() => axios.get(\"/best_deals\"));\n\n// mock.onGet(\"/airports\").reply(200, {\n//   airports: [\n//     { name: \"Tegel Airport(Berlin,DE)\" },\n//     { name: \"Schönefeld Airport(Berlin,DE)\" },\n//     { name: \"Chopin Airport(Warsaw,PL)\" },\n//     { name: \"Borispol Airoport(Kiev,UA)\" },\n//     { name: \"Juliani Airport(Kiev,UA)\" },\n//     { name: \"Minsk-1 Airport(Minsk, BLR)\" },\n//     { name: \"Vilnius Airport(Vilnius, LT)\" },\n//     { name: \"Riga Airport(Riga, LV)\" },\n//     { name: \"Tallinn Airport(Tallinn, EE)\" },\n//     { name: \"Sheremetyevo Airport(Moscow, RUS)\" },\n//     { name: \"Domodedovo Airport(Moscow, RUS)\" },\n//     { name: \"Schiphol Airport(Amsterdam, NLD)\" }\n//   ]\n// });\n\n// mock.onGet(\"/news\").reply(200, {\n//   news: [\n//     {\n//       id: 1,\n//       new1: \"Brexit\",\n//       about: \"Start yout travel from here\",\n//       image:\n//         \"https://github.com/nickprudnik/Front-end/blob/test/src/components/carousel/Images/MINSK2.png?raw=true\"\n//     },\n//     {\n//       id: 2,\n//       new1: \"Minsk\",\n//       about: \"New travel regulations for UK passport holders\",\n//       image:\n//         \"https://github.com/nickprudnik/Front-end/blob/test/src/components/carousel/Images/PASSPORT.jpg?raw=true\"\n//     },\n//     {\n//       id: 3,\n//       new1: \"Your luggage\",\n//       about: \"New rules from 03/25/2019\",\n//       image:\n//         \"https://github.com/nickprudnik/Front-end/blob/test/src/components/carousel/Images/LUGGAGE.png?raw=true\"\n//     }\n//   ]\n// });\n\n// mock.onPost(\"/latest_news\").reply(() => axios.get(\"/news\"));\n\n// mock.onGet(\"/planeShemes\").reply(200, [\n//   {\n//     plane: {\n//       rows: 2,\n//       subRows: 6,\n//       seats: 10,\n//       bookedSeats: []\n//     }\n//   }\n// ]);\n\n// mock.onPost(\"/planeShemes\").reply(() => axios.get(\"/plane\"));\n\n// export default axios;\n"]},"metadata":{},"sourceType":"module"}