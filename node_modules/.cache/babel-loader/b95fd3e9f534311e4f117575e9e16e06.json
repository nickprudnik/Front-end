{"ast":null,"code":"import _objectSpread from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Front-end\\\\Front-end\\\\src\\\\components\\\\passengers-list\\\\index.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Form } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { FieldArray } from 'react-final-form-arrays';\nimport PropTypes from 'prop-types'; // import ExpandablePanel from './expandable-panel';\n\nimport { setPassengersInfo as _setPassengersInfo } from '../../redux/user/actions';\nimport './index.scss';\nimport Details from './expandable-panel/details';\nimport Header from './expandable-panel/header';\nimport _fetchPlaneSchema from '../../redux/data/plane-schema/actions';\n\nvar PassengersList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PassengersList, _Component);\n\n  function PassengersList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PassengersList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PassengersList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (values) {\n      var passengers = Object.keys(values).sort().map(function (key) {\n        return values[key];\n      });\n      var passengersArray = [];\n      var passAmount = passengers.length / 3;\n\n      for (var i = 0; i < passAmount; i++) {\n        var obj = {\n          firstname: passengers[i],\n          lastname: passengers[i + passAmount],\n          luggagePrice: passengers[i + passAmount * 2]\n        };\n        passengersArray.push(obj);\n      }\n\n      var history = _this.props.history;\n\n      _this.props.setPassengersInfo(passengersArray);\n\n      _this.props.fetchPlaneSchema(_this.props.planeId);\n\n      return history.push('/passengers-seats');\n    };\n\n    return _this;\n  }\n\n  _createClass(PassengersList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$userReque = this.props.userRequest,\n          adult = _this$props$userReque.adult,\n          child = _this$props$userReque.child,\n          infant = _this$props$userReque.infant;\n      var passengersAmount = new Array((+adult || 0) + (+child || 0) + (+infant || 0)).fill(1);\n      return React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        mutators: _objectSpread({}, arrayMutators),\n        render: function render(_ref, pristine, submitting) {\n          var handleSubmit = _ref.handleSubmit;\n          return React.createElement(\"form\", {\n            onSubmit: handleSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(FieldArray, {\n            name: \"information\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, function () {\n            return passengersAmount.map(function (elem, index) {\n              return (// <ExpandablePanel key={Math.random()} index={index} />\n                React.createElement(\"div\", {\n                  className: \"expandable-panel\",\n                  key: index,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 62\n                  },\n                  __self: this\n                }, React.createElement(Header, {\n                  index: index,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 63\n                  },\n                  __self: this\n                }), React.createElement(Details, {\n                  index: index,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 64\n                  },\n                  __self: this\n                }))\n              );\n            });\n          }), React.createElement(\"button\", {\n            type: \"submit\",\n            disabled: submitting || pristine,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }, \"Confirm\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PassengersList;\n}(Component);\n\nPassengersList.propTypes = {\n  userRequest: PropTypes.object.isRequired,\n  setPassengersInfo: PropTypes.func.isRequired,\n  fetchPlaneSchema: PropTypes.func.isRequired,\n  history: PropTypes.object.isRequired,\n  planeId: PropTypes.number.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userRequest: state.user.request,\n    planeId: state.user.selectedFlight.planeId\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setPassengersInfo: function setPassengersInfo(info) {\n      return dispatch(_setPassengersInfo(info));\n    },\n    fetchPlaneSchema: function fetchPlaneSchema(planeId) {\n      return dispatch(_fetchPlaneSchema(planeId));\n    }\n  };\n};\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(PassengersList);","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\components\\passengers-list\\index.js"],"names":["React","Component","withRouter","connect","compose","Form","arrayMutators","FieldArray","PropTypes","setPassengersInfo","Details","Header","fetchPlaneSchema","PassengersList","onSubmit","values","passengers","Object","keys","sort","map","key","passengersArray","passAmount","length","i","obj","firstname","lastname","luggagePrice","push","history","props","planeId","userRequest","adult","child","infant","passengersAmount","Array","fill","pristine","submitting","handleSubmit","elem","index","propTypes","object","isRequired","func","number","mapStateToProps","state","user","request","selectedFlight","mapDispatchToProps","dispatch","info"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Form } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { FieldArray } from 'react-final-form-arrays';\nimport PropTypes from 'prop-types';\n// import ExpandablePanel from './expandable-panel';\nimport { setPassengersInfo } from '../../redux/user/actions';\nimport './index.scss';\nimport Details from './expandable-panel/details';\nimport Header from './expandable-panel/header';\nimport fetchPlaneSchema from '../../redux/data/plane-schema/actions';\n\nclass PassengersList extends Component {\n  static propTypes = {\n    userRequest: PropTypes.object.isRequired,\n    setPassengersInfo: PropTypes.func.isRequired,\n    fetchPlaneSchema: PropTypes.func.isRequired,\n    history: PropTypes.object.isRequired,\n    planeId: PropTypes.number.isRequired,\n  };\n\n  onSubmit = (values) => {\n    const passengers = Object.keys(values).sort().map(key => values[key]);\n\n    const passengersArray = [];\n    const passAmount = passengers.length / 3;\n\n    for (let i = 0; i < passAmount; i++) {\n      const obj = {\n        firstname: passengers[i],\n        lastname: passengers[i + passAmount],\n        luggagePrice: passengers[i + passAmount * 2],\n      };\n      passengersArray.push(obj);\n    }\n\n    const { history } = this.props;\n    this.props.setPassengersInfo(passengersArray);\n    this.props.fetchPlaneSchema(this.props.planeId);\n    return history.push('/passengers-seats');\n  };\n\n  render() {\n    const { adult, child, infant } = this.props.userRequest;\n    const passengersAmount = new Array((+adult || 0) + (+child || 0) + (+infant || 0)).fill(1);\n\n    return (\n      <Form\n        onSubmit={this.onSubmit}\n        mutators={{\n          ...arrayMutators,\n        }}\n        render={({ handleSubmit },\n          pristine, submitting) => (\n            <form onSubmit={handleSubmit}>\n              <FieldArray name=\"information\">\n                {() => (passengersAmount.map((elem, index) => (\n                  // <ExpandablePanel key={Math.random()} index={index} />\n                  <div className=\"expandable-panel\" key={index}>\n                    <Header index={index} />\n                    <Details index={index} />\n                  </div>\n                )))}\n              </FieldArray>\n              <button type=\"submit\" disabled={submitting || pristine}>\n                Confirm\n              </button>\n            </form>\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  userRequest: state.user.request,\n  planeId: state.user.selectedFlight.planeId,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setPassengersInfo: info => dispatch(setPassengersInfo(info)),\n  fetchPlaneSchema: planeId => dispatch(fetchPlaneSchema(planeId)),\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps),\n)(PassengersList);\n"]},"metadata":{},"sourceType":"module"}