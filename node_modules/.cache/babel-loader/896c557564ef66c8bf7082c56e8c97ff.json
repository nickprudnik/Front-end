{"ast":null,"code":"import _classCallCheck from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Front-end\\\\Front-end\\\\src\\\\components\\\\Best-deals\\\\bestDeals.js\";\nimport React from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { ticketsFetchData as _ticketsFetchData } from '../../redux/search/tickets/actions';\nimport { airportsFetchData as _airportsFetchData } from '../../redux/search/airports/actions';\nimport { setSelectedFlightInfo as _setSelectedFlightInfo, setTotalPrice as _setTotalPrice } from '../../redux/user/actions';\n\nvar BestDeals =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BestDeals, _React$Component);\n\n  function BestDeals(props) {\n    _classCallCheck(this, BestDeals);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BestDeals).call(this, props));\n  }\n\n  _createClass(BestDeals, [{\n    key: \"render\",\n    value: function render() {\n      var tickets = this.props.tickets;\n      console.log(this.props);\n      return tickets.map(function (_ref) {\n        var dateFrom = _ref.dateFrom,\n            dateTo = _ref.dateTo,\n            startTime = _ref.startTime,\n            endTime = _ref.endTime,\n            fromCountry = _ref.fromCountry,\n            toCountry = _ref.toCountry,\n            price = _ref.price;\n        return React.createElement(Table, {\n          responsive: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, \"Date From\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Date To\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Start time\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"End time\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"From Country\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"To Country\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Price\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Book right now \\u290B\"))), React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, dateFrom), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, dateTo), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, startTime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, endTime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, fromCountry), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, toCountry), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, price), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"card-buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"BOOK NOW\")))));\n      });\n    }\n  }]);\n\n  return BestDeals;\n}(React.Component);\n\nBestDeals.propTypes = {\n  ticketsFetchData: PropTypes.func.isRequired,\n  tickets: PropTypes.array.isRequired,\n  setTotalPrice: PropTypes.func.isRequired,\n  setSelectedFlightInfo: PropTypes.func.isRequired,\n  classes: PropTypes.object.isRequired,\n  airports: PropTypes.array.isRequired,\n  airportsFetchData: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userRequest: state.user.request,\n    tickets: state.searchPage.tickets.items,\n    ticketsHasErrored: state.searchPage.tickets.hasErrored,\n    ticketsIsLoading: state.searchPage.tickets.isLoading,\n    airports: state.searchPage.airports.items,\n    airportsHaveErrored: state.searchPage.airports.hasErrored\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    ticketsFetchData: function ticketsFetchData(url, values) {\n      return dispatch(_ticketsFetchData(url, values));\n    },\n    setTotalPrice: function setTotalPrice(price) {\n      return dispatch(_setTotalPrice(price));\n    },\n    setSelectedFlightInfo: function setSelectedFlightInfo(flightInfo) {\n      return dispatch(_setSelectedFlightInfo(flightInfo));\n    },\n    airportsFetchData: function airportsFetchData(url) {\n      return dispatch(_airportsFetchData(url));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BestDeals);","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\components\\Best-deals\\bestDeals.js"],"names":["React","Table","Button","PropTypes","connect","ticketsFetchData","airportsFetchData","setSelectedFlightInfo","setTotalPrice","BestDeals","props","tickets","console","log","map","dateFrom","dateTo","startTime","endTime","fromCountry","toCountry","price","Component","propTypes","func","isRequired","array","classes","object","airports","mapStateToProps","state","userRequest","user","request","searchPage","items","ticketsHasErrored","hasErrored","ticketsIsLoading","isLoading","airportsHaveErrored","mapDispatchToProps","dispatch","url","values","flightInfo"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { ticketsFetchData } from '../../redux/search/tickets/actions';\r\nimport { airportsFetchData } from '../../redux/search/airports/actions';\r\nimport { setSelectedFlightInfo, setTotalPrice } from '../../redux/user/actions';\r\n\r\nclass BestDeals extends React.Component {\r\n  static propTypes = {\r\n    ticketsFetchData: PropTypes.func.isRequired,\r\n    tickets: PropTypes.array.isRequired,\r\n        setTotalPrice: PropTypes.func.isRequired,\r\n    setSelectedFlightInfo: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    airports: PropTypes.array.isRequired,\r\n    airportsFetchData: PropTypes.func.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n    render() {\r\n      const {tickets} = this.props;\r\n      console.log(this.props);\r\n      return (\r\n        tickets.map(({dateFrom, dateTo, startTime, endTime, fromCountry, toCountry, price }) => (\r\n          <Table responsive>\r\n        <thead>\r\n            <tr>\r\n            <th>Date From</th>\r\n            <th>Date To</th>\r\n            <th>Start time</th>\r\n            <th>End time</th>\r\n            <th>From Country</th>\r\n            <th>To Country</th>\r\n            <th>Price</th>\r\n            <th>Book right now ⤋</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n            <td>{dateFrom}</td>\r\n            <td>{dateTo}</td>\r\n            <td>{startTime}</td>\r\n            <td>{endTime}</td>\r\n            <td>{fromCountry}</td>\r\n            <td>{toCountry}</td>\r\n            <td>{price}</td>\r\n            <td><Button className=\"card-buttons\">BOOK NOW</Button></td>\r\n            </tr>\r\n        </tbody>\r\n        </Table>\r\n        )\r\n      ))\r\n    }\r\n  }\r\n\r\n  const mapStateToProps = state => ({\r\n    userRequest: state.user.request,\r\n    tickets: state.searchPage.tickets.items,\r\n    ticketsHasErrored: state.searchPage.tickets.hasErrored,\r\n    ticketsIsLoading: state.searchPage.tickets.isLoading,\r\n    airports: state.searchPage.airports.items,\r\n  airportsHaveErrored: state.searchPage.airports.hasErrored,\r\n  });\r\n\r\n  const mapDispatchToProps = dispatch => ({\r\n    ticketsFetchData: (url, values) => dispatch(ticketsFetchData(url, values)),\r\n    setTotalPrice: price => dispatch(setTotalPrice(price)),\r\n    setSelectedFlightInfo: flightInfo => dispatch(setSelectedFlightInfo(flightInfo)),\r\n    airportsFetchData: url => dispatch(airportsFetchData(url)),\r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BestDeals);"]},"metadata":{},"sourceType":"module"}