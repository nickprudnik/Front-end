{"ast":null,"code":"// const axios = require('axios');\n// const MockAdapter = require('axios-mock-adapter');\n// const mock = new MockAdapter(axios);\n// mock.onGet('/tickets').reply(200, {\n//   tickets: [\n//     {\n//       id: Math.random(),\n//       date: '16, FEB',\n//       startTime: '6.30',\n//       endTime: '8.45',\n//       price: '125',\n//       planeId: 1,\n//     },\n//     {\n//       id: Math.random(),\n//       date: '16, FEB',\n//       startTime: '13.35',\n//       endTime: '15.50',\n//       price: '150',\n//       planeId: 2,\n//     },\n//     {\n//       id: Math.random(),\n//       date: '16, FEB',\n//       startTime: '16.40',\n//       endTime: '18.55',\n//       price: '115',\n//       planeId: 3,\n//     },\n//   ],\n// });\n// mock.onPost('/search-request').reply(() => axios.get('/tickets'));\n// mock.onGet('/airports').reply(200, {\n//   airports: [{ name: 'Belarus' },\n//     { name: 'Belarus' },\n//     { name: 'Netherlands' },\n//     { name: 'Poland' },\n//     { name: 'Ukrain' },\n//     { name: 'Litva' },\n//     { name: 'Latvia' },\n//     { name: 'Estonia' },\n//     { name: 'Russia' },\n//   ],\n// });\n// mock.onGet('/planes').reply(200, [\n//   {\n//     rows: 15,\n//     location: [1, 1, 1, 0, 1, 1, 1],\n//   },\n//   {\n//     rows: 15,\n//     location: [1, 1, 0, 1, 1, 0, 1, 1],\n//   },\n//   {\n//     rows: 15,\n//     location: [1, 0, 1, 1, 1, 0, 1],\n//   },\n// ]);\n// export default axios;","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\data\\index.js"],"names":[],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// const axios = require('axios');\n// const MockAdapter = require('axios-mock-adapter');\n\n// const mock = new MockAdapter(axios);\n\n// mock.onGet('/tickets').reply(200, {\n//   tickets: [\n//     {\n//       id: Math.random(),\n//       date: '16, FEB',\n//       startTime: '6.30',\n//       endTime: '8.45',\n//       price: '125',\n//       planeId: 1,\n//     },\n//     {\n//       id: Math.random(),\n//       date: '16, FEB',\n//       startTime: '13.35',\n//       endTime: '15.50',\n//       price: '150',\n//       planeId: 2,\n//     },\n//     {\n//       id: Math.random(),\n//       date: '16, FEB',\n//       startTime: '16.40',\n//       endTime: '18.55',\n//       price: '115',\n//       planeId: 3,\n//     },\n//   ],\n// });\n\n// mock.onPost('/search-request').reply(() => axios.get('/tickets'));\n\n// mock.onGet('/airports').reply(200, {\n//   airports: [{ name: 'Belarus' },\n//     { name: 'Belarus' },\n//     { name: 'Netherlands' },\n//     { name: 'Poland' },\n//     { name: 'Ukrain' },\n//     { name: 'Litva' },\n//     { name: 'Latvia' },\n//     { name: 'Estonia' },\n//     { name: 'Russia' },\n//   ],\n// });\n\n// mock.onGet('/planes').reply(200, [\n//   {\n//     rows: 15,\n//     location: [1, 1, 1, 0, 1, 1, 1],\n//   },\n//   {\n//     rows: 15,\n//     location: [1, 1, 0, 1, 1, 0, 1, 1],\n//   },\n//   {\n//     rows: 15,\n//     location: [1, 0, 1, 1, 1, 0, 1],\n//   },\n// ]);\n\n// export default axios;\n"]},"metadata":{},"sourceType":"module"}