{"ast":null,"code":"import { SIGN_UP_SUCCESS, SIGN_IN_SUCCESS, RESET_PASS_SUCCESS, AUTHENTICATION_HAS_ERRORED } from './types';\nimport { signUp, signIn, resetPass } from '../api/index';\nimport { history } from '../App';\nexport var registerUser = function registerUser(user) {\n  return function (dispatch) {\n    signUp(user).then(function (res) {\n      dispatch(registerUserSuccess(res));\n      history.push('/');\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var registerUserSuccess = function registerUserSuccess(data) {\n  return {\n    type: SIGN_UP_SUCCESS,\n    payload: {\n      email: data.email,\n      password: data.password\n    }\n  };\n};\nexport var loginUser = function loginUser(user) {\n  return function (dispatch) {\n    signIn(user).then(function (res) {\n      dispatch(loginUserSuccess(res));\n      history.push('/');\n    }).catch(function (err) {\n      dispatch({\n        type: AUTHENTICATION_HAS_ERRORED,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var loginUserSuccess = function loginUserSuccess(data) {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: {\n      email: data.email,\n      password: data.password\n    }\n  };\n};\nexport var resetPassword = function resetPassword(_ref) {\n  var email = _ref.email,\n      password = _ref.password;\n  return function (dispatch) {\n    return resetPass({\n      email: email,\n      password: password\n    }).then(function (res) {\n      dispatch(resetPasswordSuccess(res));\n      history.push('/sign_in');\n    }).catch(function (error) {\n      throw error;\n    });\n  };\n};\nexport var resetPasswordSuccess = function resetPasswordSuccess(data) {\n  return {\n    type: RESET_PASS_SUCCESS,\n    payload: {\n      email: data.email,\n      password: data.password\n    }\n  };\n};","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\actions\\authentication.js"],"names":["SIGN_UP_SUCCESS","SIGN_IN_SUCCESS","RESET_PASS_SUCCESS","AUTHENTICATION_HAS_ERRORED","signUp","signIn","resetPass","history","registerUser","user","dispatch","then","res","registerUserSuccess","push","catch","err","type","GET_ERRORS","payload","response","data","email","password","loginUser","loginUserSuccess","resetPassword","resetPasswordSuccess","error"],"mappings":"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","sourcesContent":["import { SIGN_UP_SUCCESS, SIGN_IN_SUCCESS, RESET_PASS_SUCCESS, AUTHENTICATION_HAS_ERRORED } from './types';\r\nimport { signUp, signIn, resetPass } from '../api/index';\r\nimport { history } from '../App';\r\n\r\nexport const registerUser = (user) => dispatch => {\r\n  signUp(user)\r\n          .then((res) => {\r\n            dispatch(registerUserSuccess(res));\r\n            history.push('/')\r\n          })\r\n          .catch(err => {\r\n              dispatch({\r\n                  type: GET_ERRORS,\r\n                  payload: err.response.data\r\n              });\r\n          });\r\n}\r\n\r\nexport const registerUserSuccess = (data) => {\r\n  return {\r\n    type: SIGN_UP_SUCCESS,\r\n    payload: {\r\n      email: data.email,\r\n      password: data.password\r\n    }\r\n  }\r\n};\r\n\r\nexport const loginUser = (user) => dispatch => {\r\n  signIn(user)\r\n          .then((res) => {\r\n            dispatch(loginUserSuccess(res));\r\n            history.push('/')})\r\n          .catch(err => {\r\n              dispatch({\r\n                  type: AUTHENTICATION_HAS_ERRORED,\r\n                  payload: err.response.data\r\n              });\r\n          });\r\n}\r\n\r\nexport const loginUserSuccess = (data) => {\r\n  return {\r\n    type: SIGN_IN_SUCCESS,\r\n    payload: {\r\n      email: data.email,\r\n      password: data.password\r\n    }\r\n  }\r\n};\r\n\r\nexport const resetPassword = ({ email, password }) => {\r\n  return (dispatch) => {\r\n    return resetPass({ email, password })\r\n      .then((res) => {\r\n        dispatch(resetPasswordSuccess(res));\r\n        history.push('/sign_in')\r\n      })\r\n      .catch(error => {\r\n        throw(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const resetPasswordSuccess = (data) => {\r\n  return {\r\n    type: RESET_PASS_SUCCESS,\r\n    payload: {\r\n      email: data.email,\r\n      password: data.password\r\n    }\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}