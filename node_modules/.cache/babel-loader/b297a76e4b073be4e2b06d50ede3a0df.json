{"ast":null,"code":"import _classCallCheck from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Front-end\\\\Front-end\\\\src\\\\containers\\\\PlaneSeats\\\\PlaneSeats.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { planeFetchData as _planeFetchData } from \"../../redux/search/planeShema/actions\";\nimport Rows from \"./Rows\";\nimport \"./index.scss\";\nimport UserContact from \"../../components/UserContact/UserContact\";\n\nvar PlaneSeats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaneSeats, _Component);\n\n  function PlaneSeats() {\n    _classCallCheck(this, PlaneSeats);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlaneSeats).apply(this, arguments));\n  }\n\n  _createClass(PlaneSeats, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.planeFetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n\n      for (var i = 0; i < this.props.plane.rows; i++) {\n        rows.push(React.createElement(Rows, {\n          className: \"row\",\n          startingLetter: i * 3 + 65,\n          subRows: this.props.plane.subRows,\n          seats: this.props.plane.seats,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"plane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cockpit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Please select seats\")), React.createElement(\"div\", {\n        className: \"exit exit--front fuselage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cabin fuselage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, rows)), React.createElement(UserContact, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PlaneSeats;\n}(Component);\n\nPlaneSeats.propTypes = {\n  planeFetchData: PropTypes.func.isRequired,\n  plane: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    plane: state.searchPage.plane.items,\n    planeHasErrored: state.searchPage.plane.hasErrored,\n    planeIsLoading: state.searchPage.plane.isLoading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    planeFetchData: function planeFetchData(values) {\n      return dispatch(_planeFetchData(values));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PlaneSeats));","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\containers\\PlaneSeats\\PlaneSeats.js"],"names":["React","Component","Fragment","withRouter","PropTypes","connect","planeFetchData","Rows","UserContact","PlaneSeats","props","rows","i","plane","push","subRows","seats","propTypes","func","isRequired","array","mapStateToProps","state","searchPage","items","planeHasErrored","hasErrored","planeIsLoading","isLoading","mapDispatchToProps","dispatch","values"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAc,IAAdA,eAAT,QAA+B,uCAA/B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,0CAAxB;;IAEMC,U;;;;;;;;;;;;;wCAMgB;AAClB,WAAKC,KAAL,CAAWJ,cAAX;AACD;;;6BAEQ;AACP,UAAMK,IAAI,GAAG,EAAb;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBF,IAArC,EAA2CC,CAAC,EAA5C,EAAgD;AAC9CD,QAAAA,IAAI,CAACG,IAAL,CACE,oBAAC,IAAD;AACE,UAAA,SAAS,EAAE,KADb;AAEE,UAAA,cAAc,EAAEF,CAAC,GAAG,CAAJ,GAAQ,EAF1B;AAGE,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBE,OAH5B;AAIE,UAAA,KAAK,EAAE,KAAKL,KAAL,CAAWG,KAAX,CAAiBG,KAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AACD,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCL,IAAjC,CALF,CADF,EAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CADF;AAYD;;;;EAlCsBV,S;;AAAnBQ,U,CACGQ,S,GAAY;AACjBX,EAAAA,cAAc,EAAEF,SAAS,CAACc,IAAV,CAAeC,UADd;AAEjBN,EAAAA,KAAK,EAAET,SAAS,CAACgB,KAAV,CAAgBD;AAFN,C;;AAoCrB,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCT,IAAAA,KAAK,EAAES,KAAK,CAACC,UAAN,CAAiBV,KAAjB,CAAuBW,KADE;AAEhCC,IAAAA,eAAe,EAAEH,KAAK,CAACC,UAAN,CAAiBV,KAAjB,CAAuBa,UAFR;AAGhCC,IAAAA,cAAc,EAAEL,KAAK,CAACC,UAAN,CAAiBV,KAAjB,CAAuBe;AAHP,GAAL;AAAA,CAA7B;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCxB,IAAAA,cAAc,EAAE,wBAAAyB,MAAM;AAAA,aAAID,QAAQ,CAACxB,eAAc,CAACyB,MAAD,CAAf,CAAZ;AAAA;AADgB,GAAL;AAAA,CAAnC;;AAIA,eAAe5B,UAAU,CACvBE,OAAO,CACLgB,eADK,EAELQ,kBAFK,CAAP,CAGEpB,UAHF,CADuB,CAAzB","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { planeFetchData } from \"../../redux/search/planeShema/actions\";\r\n\r\nimport Rows from \"./Rows\";\r\n\r\nimport \"./index.scss\";\r\nimport UserContact from \"../../components/UserContact/UserContact\";\r\n\r\nclass PlaneSeats extends Component {\r\n  static propTypes = {\r\n    planeFetchData: PropTypes.func.isRequired,\r\n    plane: PropTypes.array.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.planeFetchData();\r\n  }\r\n\r\n  render() {\r\n    const rows = [];\r\n    for (let i = 0; i < this.props.plane.rows; i++) {\r\n      rows.push(\r\n        <Rows\r\n          className={\"row\"}\r\n          startingLetter={i * 3 + 65}\r\n          subRows={this.props.plane.subRows}\r\n          seats={this.props.plane.seats}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"plane\">\r\n          <div className=\"cockpit\">\r\n            <h1>Please select seats</h1>\r\n          </div>\r\n          <div className=\"exit exit--front fuselage\" />\r\n          <div className=\"cabin fuselage\">{rows}</div>\r\n        </div>\r\n        <UserContact />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  plane: state.searchPage.plane.items,\r\n  planeHasErrored: state.searchPage.plane.hasErrored,\r\n  planeIsLoading: state.searchPage.plane.isLoading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  planeFetchData: values => dispatch(planeFetchData(values))\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(PlaneSeats)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}