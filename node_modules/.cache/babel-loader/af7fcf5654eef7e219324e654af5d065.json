{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Front-end\\\\Front-end\\\\src\\\\containers\\\\PlaneSeats\\\\PlaneSeats.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { planeFetchData as _planeFetchData } from \"../../redux/search/planeShema/actions\";\nimport Rows from \"./Rows\";\nimport \"./index.scss\";\nimport UserContact from \"../../components/UserContact/UserContact\";\nimport ReservedList from \"./ReservedList\";\nimport OrderDetails from \"../../components/OrderList/OrderList\";\n\nvar PlaneSeats =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaneSeats, _Component);\n\n  function PlaneSeats(props) {\n    var _this;\n\n    _classCallCheck(this, PlaneSeats);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaneSeats).call(this, props));\n\n    _this.bookSeat = function (e) {\n      _this.setState({\n        bookedSeats: [].concat(_toConsumableArray(_this.state.bookedSeats), [e.target.id])\n      });\n    };\n\n    _this.state = {\n      bookedSeats: []\n    };\n    return _this;\n  }\n\n  _createClass(PlaneSeats, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.planeFetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var rows = [];\n\n      for (var i = 0; i < this.props.plane.rows; i++) {\n        rows.push(React.createElement(Rows, {\n          className: \"row\",\n          startingLetter: i * 3 + 65,\n          subRows: this.props.plane.subRows,\n          seats: this.props.plane.seats,\n          onClick: this.bookSeat,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"reserved_main_page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"plane_seats_svg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"plane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cockpit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Please select seats\")), React.createElement(\"div\", {\n        className: \"exit exit--front fuselage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"cabin fuselage\",\n        onClick: this.bookSeat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, rows), React.createElement(\"div\", {\n        className: \"exit exit--front fuselage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"tickets_info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(ReservedList, {\n        bookedSeats: this.state.bookedSeats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(OrderDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))), React.createElement(UserContact, {\n        className: \"user_contacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PlaneSeats;\n}(Component);\n\nPlaneSeats.propTypes = {\n  planeFetchData: PropTypes.func.isRequired,\n  plane: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    plane: state.searchPage.plane.items,\n    planeHasErrored: state.searchPage.plane.hasErrored,\n    planeIsLoading: state.searchPage.plane.isLoading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    planeFetchData: function planeFetchData(values) {\n      return dispatch(_planeFetchData(values));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PlaneSeats));","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\containers\\PlaneSeats\\PlaneSeats.js"],"names":["React","Component","Fragment","withRouter","PropTypes","connect","planeFetchData","Rows","UserContact","ReservedList","OrderDetails","PlaneSeats","props","bookSeat","e","setState","bookedSeats","state","target","id","rows","i","plane","push","subRows","seats","propTypes","func","isRequired","array","mapStateToProps","searchPage","items","planeHasErrored","hasErrored","planeIsLoading","isLoading","mapDispatchToProps","dispatch","values"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { planeFetchData } from \"../../redux/search/planeShema/actions\";\r\n\r\nimport Rows from \"./Rows\";\r\n\r\nimport \"./index.scss\";\r\nimport UserContact from \"../../components/UserContact/UserContact\";\r\nimport ReservedList from \"./ReservedList\";\r\nimport OrderDetails from \"../../components/OrderList/OrderList\";\r\n\r\nclass PlaneSeats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bookedSeats: []\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    planeFetchData: PropTypes.func.isRequired,\r\n    plane: PropTypes.array.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.planeFetchData();\r\n  }\r\n\r\n  bookSeat = e => {\r\n    this.setState({\r\n      bookedSeats: [...this.state.bookedSeats, e.target.id]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const rows = [];\r\n    for (let i = 0; i < this.props.plane.rows; i++) {\r\n      rows.push(\r\n        <Rows\r\n          className={\"row\"}\r\n          startingLetter={i * 3 + 65}\r\n          subRows={this.props.plane.subRows}\r\n          seats={this.props.plane.seats}\r\n          onClick={this.bookSeat}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <Fragment>\r\n        <div className=\"reserved_main_page\">\r\n          <div className=\"plane_seats_svg\">\r\n            <div className=\"plane\">\r\n              <div className=\"cockpit\">\r\n                <h1>Please select seats</h1>\r\n              </div>\r\n              <div className=\"exit exit--front fuselage\" />\r\n              <div className=\"cabin fuselage\" onClick={this.bookSeat}>\r\n                {rows}\r\n              </div>\r\n              <div className=\"exit exit--front fuselage\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"tickets_info\">\r\n            <ReservedList bookedSeats={this.state.bookedSeats} />\r\n            <OrderDetails />\r\n          </div>\r\n        </div>\r\n        <UserContact className=\"user_contacts\" />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  plane: state.searchPage.plane.items,\r\n  planeHasErrored: state.searchPage.plane.hasErrored,\r\n  planeIsLoading: state.searchPage.plane.isLoading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  planeFetchData: values => dispatch(planeFetchData(values))\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(PlaneSeats)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}