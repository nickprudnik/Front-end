{"ast":null,"code":"import _objectSpread from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { handleActions } from 'redux-actions';\nimport { AIRPORT_FETCH_DATA_SUCCESS, AIRPORT_HAS_ERRORED } from '../actionTypes';\nvar initialState = {\n  items: [],\n  hasErrored: false\n};\nexport default function airports() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AIRPORT_FETCH_DATA_SUCCESS:\n      return _objectSpread({}, state, {\n        items: action.items\n      });\n\n    case AIRPORT_HAS_ERRORED:\n      return _objectSpread({}, state, {\n        hasErrored: action.hasErrored\n      });\n\n    default:\n      return state;\n  }\n}\nvar airports = handleActions;","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\redux\\search\\airports\\reducers.js"],"names":["handleActions","AIRPORT_FETCH_DATA_SUCCESS","AIRPORT_HAS_ERRORED","initialState","items","hasErrored","airports","state","action","type"],"mappings":";AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,0BAAT,EAAqCC,mBAArC,QAAgE,gBAAhE;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAKA,eAAe,SAASC,QAAT,GAAgD;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,0BAAL;AACE,+BACKM,KADL;AAEEH,QAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFhB;;AAIF,SAAKF,mBAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAFrB;;AAIF;AACE,aAAOE,KAAP;AAZJ;AAcD;AAED,IAAMD,QAAQ,GAAGN,aAAjB","sourcesContent":["import { handleActions } from 'redux-actions';\nimport { AIRPORT_FETCH_DATA_SUCCESS, AIRPORT_HAS_ERRORED } from '../actionTypes';\n\nconst initialState = {\n  items: [],\n  hasErrored: false,\n};\n\nexport default function airports(state = initialState, action) {\n  switch (action.type) {\n    case AIRPORT_FETCH_DATA_SUCCESS:\n      return {\n        ...state,\n        items: action.items,\n      };\n    case AIRPORT_HAS_ERRORED:\n      return {\n        ...state,\n        hasErrored: action.hasErrored,\n      };\n    default:\n      return state;\n  }\n}\n\nconst airports = handleActions"]},"metadata":{},"sourceType":"module"}