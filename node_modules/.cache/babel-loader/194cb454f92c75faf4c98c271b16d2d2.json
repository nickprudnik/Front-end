{"ast":null,"code":"import _defineProperty from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _handleActions;\n\nimport { handleActions } from 'redux-actions';\nimport { AIRPORT_FETCH_DATA_SUCCESS, AIRPORT_HAS_ERRORED } from '../actionTypes';\n\nfunction getInitialState() {\n  return {\n    items: [],\n    hasErrored: false\n  };\n}\n\nvar airports = handleActions((_handleActions = {}, _defineProperty(_handleActions, AIRPORT_FETCH_DATA_SUCCESS, function (state, action) {\n  return _objectSpread({}, state, {\n    items: action.items\n  });\n}), _defineProperty(_handleActions, AIRPORT_HAS_ERRORED, function (state, action) {\n  return _objectSpread({}, state, {\n    hasErrored: action.hasErrored\n  });\n}), _handleActions), getInitialState());\nexport default airports;","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\redux\\search\\airports\\reducers.js"],"names":["handleActions","AIRPORT_FETCH_DATA_SUCCESS","AIRPORT_HAS_ERRORED","getInitialState","items","hasErrored","airports","state","action"],"mappings":";;;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAASC,0BAAT,EAAqCC,mBAArC,QAAgE,gBAAhE;;AAEA,SAASC,eAAT,GAA4B;AAC1B,SAAO;AACLC,IAAAA,KAAK,EAAE,EADF;AAELC,IAAAA,UAAU,EAAE;AAFP,GAAP;AAID;;AAED,IAAMC,QAAQ,GAAGN,aAAa,uDAEzBC,0BAFyB,EAEI,UAACM,KAAD,EAAQC,MAAR;AAAA,2BACzBD,KADyB;AAClBH,IAAAA,KAAK,EAAEI,MAAM,CAACJ;AADI;AAAA,CAFJ,mCAKzBF,mBALyB,EAKH,UAACK,KAAD,EAAQC,MAAR;AAAA,2BAClBD,KADkB;AACXF,IAAAA,UAAU,EAAEG,MAAM,CAACH;AADR;AAAA,CALG,oBAS5BF,eAAe,EATa,CAA9B;AAYA,eAAeG,QAAf","sourcesContent":["import { handleActions } from 'redux-actions';\nimport { AIRPORT_FETCH_DATA_SUCCESS, AIRPORT_HAS_ERRORED } from '../actionTypes';\n\nfunction getInitialState () {\n  return {\n    items: [],\n    hasErrored: false\n  };\n}\n\nconst airports = handleActions(\n  {\n    [AIRPORT_FETCH_DATA_SUCCESS]: (state, action) => ({\n      ...state, items: action.items\n    }),\n    [AIRPORT_HAS_ERRORED]: (state, action) => ({\n      ...state, hasErrored: action.hasErrored\n    }),\n  },\n  getInitialState ()\n);\n\nexport default airports;"]},"metadata":{},"sourceType":"module"}