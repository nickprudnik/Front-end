{"ast":null,"code":"import { createSelector } from \"reselect\";\nimport moment from 'moment';\n\nvar getUserRequest = function getUserRequest(state) {\n  return state.user.request;\n};\n\nvar getTickets = function getTickets(state) {\n  return state.searchPage.tickets.items;\n};\n\nvar ticketsSearchSelector = createSelector([getUserRequest, getTickets], function (UserRequest, Tickets) {\n  var fromTickets = Tickets.filter(function (ticket) {\n    return ticket.fromCountry == UserRequest.from && moment(ticket.dateFrom).format('L').startOf('day').isSame(moment(UserRequest.departure).format('L').startOf('day'));\n  });\n  return fromTickets.filter(function (ticket2) {\n    return ticket2.toCountry == UserRequest.to && moment(ticket2.dateTo).format('L').startOf('day').isSame(moment(UserRequest.return).format('L').startOf('day'));\n  });\n});\nexport default ticketsSearchSelector;","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\selectors\\ticketsSearchSelector.js"],"names":["createSelector","moment","getUserRequest","state","user","request","getTickets","searchPage","tickets","items","ticketsSearchSelector","UserRequest","Tickets","fromTickets","filter","ticket","fromCountry","from","dateFrom","format","startOf","isSame","departure","ticket2","toCountry","to","dateTo","return"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,IAAN,CAAWC,OAAf;AAAA,CAA5B;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAH,KAAK;AAAA,SAAIA,KAAK,CAACI,UAAN,CAAiBC,OAAjB,CAAyBC,KAA7B;AAAA,CAAxB;;AAEA,IAAMC,qBAAqB,GAAGV,cAAc,CAAC,CAACE,cAAD,EAAiBI,UAAjB,CAAD,EAC1C,UAACK,WAAD,EAAaC,OAAb,EAAyB;AACvB,MAAMC,WAAW,GAAGD,OAAO,CAACE,MAAR,CAAe,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,WAAP,IAAsBL,WAAW,CAACM,IAAlC,IAA0ChB,MAAM,CAACc,MAAM,CAACG,QAAR,CAAN,CAAwBC,MAAxB,CAA+B,GAA/B,EAAoCC,OAApC,CAA4C,KAA5C,EAAmDC,MAAnD,CAA0DpB,MAAM,CAACU,WAAW,CAACW,SAAb,CAAN,CAA8BH,MAA9B,CAAqC,GAArC,EAA0CC,OAA1C,CAAkD,KAAlD,CAA1D,CAA9C;AAAA,GAArB,CAApB;AACA,SAAOP,WAAW,CAACC,MAAZ,CAAmB,UAAAS,OAAO;AAAA,WAAIA,OAAO,CAACC,SAAR,IAAqBb,WAAW,CAACc,EAAjC,IAAuCxB,MAAM,CAACsB,OAAO,CAACG,MAAT,CAAN,CAAuBP,MAAvB,CAA8B,GAA9B,EAAmCC,OAAnC,CAA2C,KAA3C,EAAkDC,MAAlD,CAAyDpB,MAAM,CAACU,WAAW,CAACgB,MAAb,CAAN,CAA2BR,MAA3B,CAAkC,GAAlC,EAAuCC,OAAvC,CAA+C,KAA/C,CAAzD,CAA3C;AAAA,GAA1B,CAAP;AACH,CAJ2C,CAA5C;AAMA,eAAeV,qBAAf","sourcesContent":["import { createSelector } from \"reselect\";\r\nimport moment from 'moment';\r\n\r\nconst getUserRequest = state => state.user.request;\r\nconst getTickets = state => state.searchPage.tickets.items;\r\n\r\nconst ticketsSearchSelector = createSelector([getUserRequest, getTickets],\r\n  (UserRequest,Tickets) => {\r\n    const fromTickets = Tickets.filter(ticket => ticket.fromCountry == UserRequest.from && moment(ticket.dateFrom).format('L').startOf('day').isSame(moment(UserRequest.departure).format('L').startOf('day')));\r\n    return fromTickets.filter(ticket2 => ticket2.toCountry == UserRequest.to && moment(ticket2.dateTo).format('L').startOf('day').isSame(moment(UserRequest.return).format('L').startOf('day')));\r\n});\r\n\r\nexport default ticketsSearchSelector;"]},"metadata":{},"sourceType":"module"}