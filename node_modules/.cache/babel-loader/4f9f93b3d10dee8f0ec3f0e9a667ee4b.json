{"ast":null,"code":"import _defineProperty from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n\nvar _handleActions;\n\nimport actionTypes from '../actionTypes';\nimport { handleActions } from 'redux-actions';\n\nfunction getInitialState() {\n  return {\n    luggageTypes: [],\n    hasErrored: false\n  };\n}\n\n;\nvar luggageTypes = handleActions((_handleActions = {}, _defineProperty(_handleActions, actionTypes.GET_LUGGAGE_TYPES, function (state, action) {\n  return _objectSpread({}, state, {\n    luggageTypes: action.luggageTypes\n  });\n}), _defineProperty(_handleActions, actionTypes.LUGGAGE_HAS_ERRORED, function (state, action) {\n  return _objectSpread({}, state, {\n    hasErrored: action.hasErrored\n  });\n}), _handleActions), getInitialState());\nexport default luggageTypes;","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\redux\\data\\luggage-types\\reducers.js"],"names":["actionTypes","handleActions","getInitialState","luggageTypes","hasErrored","GET_LUGGAGE_TYPES","state","action","LUGGAGE_HAS_ERRORED"],"mappings":";;;;;AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,aAAT,QAA8B,eAA9B;;AAEA,SAASC,eAAT,GAA4B;AAC1B,SAAO;AACLC,IAAAA,YAAY,EAAE,EADT;AAELC,IAAAA,UAAU,EAAE;AAFP,GAAP;AAID;;AAAA;AAED,IAAMD,YAAY,GAAGF,aAAa,uDAE7BD,WAAW,CAACK,iBAFiB,EAEG,UAACC,KAAD,EAAQC,MAAR;AAAA,2BAC5BD,KAD4B;AACrBH,IAAAA,YAAY,EAAEI,MAAM,CAACJ;AADA;AAAA,CAFH,mCAK7BH,WAAW,CAACQ,mBALiB,EAKK,UAACF,KAAD,EAAQC,MAAR;AAAA,2BAC9BD,KAD8B;AACvBF,IAAAA,UAAU,EAAEG,MAAM,CAACH;AADI;AAAA,CALL,oBAShCF,eAAe,EATiB,CAAlC;AAYA,eAAeC,YAAf","sourcesContent":["import actionTypes from '../actionTypes';\nimport { handleActions } from 'redux-actions';\n\nfunction getInitialState () {\n  return {\n    luggageTypes: [],\n    hasErrored: false,\n  }\n};\n\nconst luggageTypes = handleActions(\n  {\n    [actionTypes.GET_LUGGAGE_TYPES]: (state, action) => ({\n      ...state, luggageTypes: action.luggageTypes\n    }),\n    [actionTypes.LUGGAGE_HAS_ERRORED]: (state, action) => ({\n      ...state, hasErrored: action.hasErrored\n    }),\n  },\n  getInitialState ()\n);\n\nexport default luggageTypes;"]},"metadata":{},"sourceType":"module"}