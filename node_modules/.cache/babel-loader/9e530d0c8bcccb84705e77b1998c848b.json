{"ast":null,"code":"var axios = require('axios');\n\nvar MockAdapter = require('axios-mock-adapter');\n\nvar mock = new MockAdapter(axios);\nmock.onGet('/tickets').reply(200, {\n  tickets: [{\n    id: 1,\n    dateFrom: '2019-03-25',\n    dateTo: '2019-03-27',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Minsk-1 Airport(Minsk, BLR)',\n    toCountry: 'Schönefeld Airport(Berlin,DE)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 2,\n    dateFrom: '2019-03-28',\n    dateTo: '2019-03-30',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Tegel Airport(Berlin,DE)',\n    toCountry: 'Minsk-1 Airport(Minsk, BLR)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 2,\n    dateFrom: '2019-03-28',\n    dateTo: '2019-03-30',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Minsk-1 Airport(Minsk, BLR)',\n    toCountry: 'Tegel Airport(Berlin,DE)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 2,\n    dateFrom: '2019-03-28',\n    dateTo: '2019-03-30',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Schönefeld Airport(Berlin,DE)',\n    toCountry: 'Minsk-1 Airport(Minsk, BLR)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 3,\n    dateFrom: '2019-03-31',\n    dateTo: '2019-04-02',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Schönefeld Airport(Berlin,DE)',\n    toCountry: 'Schiphol Airport(Amsterdam, NLD)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 4,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Minsk-1 Airport(Minsk, BLR)',\n    toCountry: 'Schiphol Airport(Amsterdam, NLD)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 4,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Schiphol Airport(Amsterdam, NLD)',\n    toCountry: 'Minsk-1 Airport(Minsk, BLR)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 4,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Borispol Airoport(Kiev,UA)',\n    toCountry: 'Chopin Airport(Warsaw,PL)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 4,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Borispol Airoport(Kiev,UA)',\n    toCountry: 'Minsk-1 Airport(Minsk, BLR)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 4,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Minsk-1 Airport(Minsk, BLR)',\n    toCountry: 'Borispol Airoport(Kiev,UA)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 4,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Sheremetyevo Airport(Moscow, RUS)',\n    toCountry: 'Minsk-1 Airport(Minsk, BLR))',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 4,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Vilnius Airport(Vilnius, LT)',\n    toCountry: 'Tallinn Airport(Tallinn, EE)',\n    price: '125',\n    planeId: 1\n  }, {\n    id: 4,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Riga Airport(Riga, LV)',\n    toCountry: 'Juliani Airport(Kiev,UA)',\n    price: '125',\n    planeId: 1\n  }]\n});\nmock.onPost('/search-request').reply(function () {\n  return axios.get('/tickets');\n});\nmock.onGet('/best_deals').reply(200, {\n  bestdeals: [{\n    id: 1,\n    dateFrom: '2019-03-25',\n    dateTo: '2019-03-27',\n    startTime: '6.30',\n    endTime: '8.45',\n    fromCountry: 'Minsk, BLR',\n    toCountry: 'Riga, LV',\n    price: '$ 70',\n    planeId: 1\n  }, {\n    id: 2,\n    dateFrom: '2019-03-28',\n    dateTo: '2019-03-30',\n    startTime: '7.30',\n    endTime: '9.45',\n    fromCountry: 'Kiev, UA',\n    toCountry: 'Warsaw, PL',\n    price: '$ 60',\n    planeId: 1\n  }, {\n    id: 3,\n    dateFrom: '2019-03-31',\n    dateTo: '2019-04-02',\n    startTime: '10.30',\n    endTime: '12.45',\n    fromCountry: 'Moscow, RUS',\n    toCountry: 'Vilnius, LT',\n    price: '$ 65',\n    planeId: 1\n  }, {\n    id: 4,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '2.30',\n    endTime: '6.45',\n    fromCountry: 'Minsk, BLR',\n    toCountry: 'Kiev, UA',\n    price: '$ 65',\n    planeId: 1\n  }, {\n    id: 5,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '7.30',\n    endTime: '10.45',\n    fromCountry: 'Kiev, UA',\n    toCountry: 'Tallinn, EE',\n    price: '$ 35',\n    planeId: 1\n  }, {\n    id: 6,\n    dateFrom: '2019-04-02',\n    dateTo: '2019-04-05',\n    startTime: '1.30',\n    endTime: '4.45',\n    fromCountry: 'Warsaw, PL',\n    toCountry: 'Amsterdam, NLD',\n    price: '$ 40',\n    planeId: 1\n  }]\n});\nmock.onPost('/search_bestdeals').reply(function () {\n  return axios.get('/best_deals');\n});\nmock.onGet('/airports').reply(200, {\n  airports: [{\n    name: 'Tegel Airport(Berlin,DE)'\n  }, {\n    name: 'Schönefeld Airport(Berlin,DE)'\n  }, {\n    name: 'Chopin Airport(Warsaw,PL)'\n  }, {\n    name: 'Borispol Airoport(Kiev,UA)'\n  }, {\n    name: 'Juliani Airport(Kiev,UA)'\n  }, {\n    name: 'Minsk-1 Airport(Minsk, BLR)'\n  }, {\n    name: 'Vilnius Airport(Vilnius, LT)'\n  }, {\n    name: 'Riga Airport(Riga, LV)'\n  }, {\n    name: 'Tallinn Airport(Tallinn, EE)'\n  }, {\n    name: 'Sheremetyevo Airport(Moscow, RUS)'\n  }, {\n    name: 'Domodedovo Airport(Moscow, RUS)'\n  }, {\n    name: 'Schiphol Airport(Amsterdam, NLD)'\n  }]\n});\nmock.onGet('/planes').reply(200, [{\n  rows: 15,\n  location: [1, 1, 1, 0, 1, 1, 1]\n}, {\n  rows: 15,\n  location: [1, 1, 0, 1, 1, 0, 1, 1]\n}, {\n  rows: 15,\n  location: [1, 0, 1, 1, 1, 0, 1]\n}]);\nmock.onGet('/luggage-types').reply(200, {\n  luggage: [{\n    \"kg\": \"10\",\n    \"price\": \"9\"\n  }, {\n    \"kg\": \"20\",\n    \"price\": \"15\"\n  }, {\n    \"kg\": \"30\",\n    \"price\": \"21\"\n  }, {\n    \"kg\": \"free carry-on bag\",\n    \"price\": \"0\"\n  }]\n});\nexport default axios;","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\data\\index.js"],"names":["axios","require","MockAdapter","mock","onGet","reply","tickets","id","dateFrom","dateTo","startTime","endTime","fromCountry","toCountry","price","planeId","onPost","get","bestdeals","airports","name","rows","location","luggage"],"mappings":"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","sourcesContent":["const axios = require('axios');\nconst MockAdapter = require('axios-mock-adapter');\n\nconst mock = new MockAdapter(axios);\n\nmock.onGet('/tickets').reply(200, {\n  tickets: [\n    {\n      id: 1,\n      dateFrom: '2019-03-25',\n      dateTo: '2019-03-27',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Minsk-1 Airport(Minsk, BLR)',\n      toCountry: 'Schönefeld Airport(Berlin,DE)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 2,\n      dateFrom: '2019-03-28',\n      dateTo: '2019-03-30',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Tegel Airport(Berlin,DE)',\n      toCountry: 'Minsk-1 Airport(Minsk, BLR)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 2,\n      dateFrom: '2019-03-28',\n      dateTo: '2019-03-30',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Minsk-1 Airport(Minsk, BLR)',\n      toCountry: 'Tegel Airport(Berlin,DE)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 2,\n      dateFrom: '2019-03-28',\n      dateTo: '2019-03-30',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Schönefeld Airport(Berlin,DE)',\n      toCountry: 'Minsk-1 Airport(Minsk, BLR)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 3,\n      dateFrom: '2019-03-31',\n      dateTo: '2019-04-02',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Schönefeld Airport(Berlin,DE)',\n      toCountry: 'Schiphol Airport(Amsterdam, NLD)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 4,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Minsk-1 Airport(Minsk, BLR)',\n      toCountry: 'Schiphol Airport(Amsterdam, NLD)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 4,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Schiphol Airport(Amsterdam, NLD)',\n      toCountry: 'Minsk-1 Airport(Minsk, BLR)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 4,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Borispol Airoport(Kiev,UA)',\n      toCountry: 'Chopin Airport(Warsaw,PL)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 4,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Borispol Airoport(Kiev,UA)',\n      toCountry: 'Minsk-1 Airport(Minsk, BLR)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 4,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Minsk-1 Airport(Minsk, BLR)',\n      toCountry: 'Borispol Airoport(Kiev,UA)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 4,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Sheremetyevo Airport(Moscow, RUS)',\n      toCountry: 'Minsk-1 Airport(Minsk, BLR))',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 4,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Vilnius Airport(Vilnius, LT)',\n      toCountry: 'Tallinn Airport(Tallinn, EE)',\n      price: '125',\n      planeId: 1,\n    },\n    {\n      id: 4,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Riga Airport(Riga, LV)',\n      toCountry: 'Juliani Airport(Kiev,UA)',\n      price: '125',\n      planeId: 1,\n    }\n  ],\n});\n\nmock.onPost('/search-request').reply(() => axios.get('/tickets'));\n\nmock.onGet('/best_deals').reply(200, {\n  bestdeals: [\n    {\n      id: 1,\n      dateFrom: '2019-03-25',\n      dateTo: '2019-03-27',\n      startTime: '6.30',\n      endTime: '8.45',\n      fromCountry: 'Minsk, BLR',\n      toCountry: 'Riga, LV',\n      price: '$ 70',\n      planeId: 1,\n    },\n    {\n      id: 2,\n      dateFrom: '2019-03-28',\n      dateTo: '2019-03-30',\n      startTime: '7.30',\n      endTime: '9.45',\n      fromCountry: 'Kiev, UA',\n      toCountry: 'Warsaw, PL',\n      price: '$ 60',\n      planeId: 1,\n    },\n    {\n      id: 3,\n      dateFrom: '2019-03-31',\n      dateTo: '2019-04-02',\n      startTime: '10.30',\n      endTime: '12.45',\n      fromCountry: 'Moscow, RUS',\n      toCountry: 'Vilnius, LT',\n      price: '$ 65',\n      planeId: 1,\n    },\n    {\n      id: 4,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '2.30',\n      endTime: '6.45',\n      fromCountry: 'Minsk, BLR',\n      toCountry: 'Kiev, UA',\n      price: '$ 65',\n      planeId: 1,\n    },\n    {\n      id: 5,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '7.30',\n      endTime: '10.45',\n      fromCountry: 'Kiev, UA',\n      toCountry: 'Tallinn, EE',\n      price: '$ 35',\n      planeId: 1,\n    },\n    {\n      id: 6,\n      dateFrom: '2019-04-02',\n      dateTo: '2019-04-05',\n      startTime: '1.30',\n      endTime: '4.45',\n      fromCountry: 'Warsaw, PL',\n      toCountry: 'Amsterdam, NLD',\n      price: '$ 40',\n      planeId: 1,\n    },\n  ],\n});\n\nmock.onPost('/search_bestdeals').reply(() => axios.get('/best_deals'));\n\nmock.onGet('/airports').reply(200, {\n  airports: [\n             { name: 'Tegel Airport(Berlin,DE)' },\n             { name: 'Schönefeld Airport(Berlin,DE)' },\n             { name: 'Chopin Airport(Warsaw,PL)' },\n             { name: 'Borispol Airoport(Kiev,UA)' },\n             { name: 'Juliani Airport(Kiev,UA)' },\n             { name: 'Minsk-1 Airport(Minsk, BLR)' },\n             { name: 'Vilnius Airport(Vilnius, LT)' },\n             { name: 'Riga Airport(Riga, LV)' },\n             { name: 'Tallinn Airport(Tallinn, EE)' },\n             { name: 'Sheremetyevo Airport(Moscow, RUS)' },\n             { name: 'Domodedovo Airport(Moscow, RUS)' },\n             { name: 'Schiphol Airport(Amsterdam, NLD)' },\n            ],\n});\n\nmock.onGet('/planes').reply(200, [\n  {\n    rows: 15,\n    location: [1, 1, 1, 0, 1, 1, 1],\n  },\n  {\n    rows: 15,\n    location: [1, 1, 0, 1, 1, 0, 1, 1],\n  },\n  {\n    rows: 15,\n    location: [1, 0, 1, 1, 1, 0, 1],\n  },\n]);\n\nmock.onGet('/luggage-types').reply(200, {\n  luggage: [\n    {\n      \"kg\": \"10\",\n      \"price\": \"9\"\n    },\n    {\n      \"kg\": \"20\",\n      \"price\": \"15\"\n    },\n    {\n      \"kg\": \"30\",\n      \"price\": \"21\"\n    },\n    {\n      \"kg\": \"free carry-on bag\",\n      \"price\": \"0\"\n    }\n  ]\n})\n\nexport default axios;\n"]},"metadata":{},"sourceType":"module"}