{"ast":null,"code":"import _objectSpread from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Front-end\\\\Front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Front-end\\\\Front-end\\\\src\\\\components\\\\passengers-list\\\\index.js\";\n\n/* eslint-disable */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Form } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { FieldArray } from 'react-final-form-arrays';\nimport PropTypes from 'prop-types';\nimport ExpandablePanel from './expandable-panel';\nimport { setPassengersInfo as _setPassengersInfo } from '../../redux/user/actions';\nimport './index.scss';\nimport Details from './expandable-panel/details';\nimport Header from './expandable-panel/header';\n\nvar PassengersList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PassengersList, _Component);\n\n  function PassengersList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PassengersList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PassengersList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (values) {\n      var passengers = {};\n      Object.keys(values).sort().forEach(function (key) {\n        passengers[key] = values[key];\n      });\n      var sortablePassengers = [];\n\n      for (var passenger in passengers) {\n        sortablePassengers.push(passengers[passenger]);\n      }\n\n      var passengersArray = [];\n      var passAmount = sortablePassengers.length / 3;\n\n      for (var i = 0; i < passAmount; i++) {\n        var obj = {\n          firstname: sortablePassengers[i],\n          lastname: sortablePassengers[i + passAmount],\n          luggagePrice: sortablePassengers[i + passAmount * 2]\n        };\n        passengersArray.push(obj);\n      }\n\n      var history = _this.props.history;\n\n      _this.props.setPassengersInfo(values);\n\n      _this.props.setPassengersInfo(passengersArray);\n\n      return history.push('/passengers-seats');\n    };\n\n    return _this;\n  }\n\n  _createClass(PassengersList, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$userReque = this.props.userRequest,\n          adult = _this$props$userReque.adult,\n          child = _this$props$userReque.child,\n          infant = _this$props$userReque.infant;\n      var passengersAmount = new Array((+adult || 0) + (+child || 0) + (+infant || 0)).fill(1);\n      return React.createElement(Form, {\n        onSubmit: this.onSubmit,\n        mutators: _objectSpread({}, arrayMutators),\n        render: function render(_ref, pristine, submitting) {\n          var handleSubmit = _ref.handleSubmit;\n          return React.createElement(\"form\", {\n            onSubmit: handleSubmit,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, React.createElement(FieldArray, {\n            name: \"information\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, function () {\n            return passengersAmount.map(function (elem, index) {\n              return (// <ExpandablePanel key={Math.random()} index={index} />\n                React.createElement(\"div\", {\n                  className: \"expandable-panel\",\n                  key: index,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 67\n                  },\n                  __self: this\n                }, React.createElement(Header, {\n                  index: index,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 68\n                  },\n                  __self: this\n                }), React.createElement(Details, {\n                  index: index,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 69\n                  },\n                  __self: this\n                }))\n              );\n            });\n          }), React.createElement(\"button\", {\n            type: \"submit\",\n            disabled: submitting || pristine,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, \"Confirm\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return PassengersList;\n}(Component);\n\nPassengersList.propTypes = {\n  userRequest: PropTypes.object.isRequired,\n  setPassengersInfo: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userRequest: state.user.request\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setPassengersInfo: function setPassengersInfo(info) {\n      return dispatch(_setPassengersInfo(info));\n    }\n  };\n};\n\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(PassengersList);","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\components\\passengers-list\\index.js"],"names":["React","Component","withRouter","connect","compose","Form","arrayMutators","FieldArray","PropTypes","ExpandablePanel","setPassengersInfo","Details","Header","PassengersList","onSubmit","values","passengers","Object","keys","sort","forEach","key","sortablePassengers","passenger","push","passengersArray","passAmount","length","i","obj","firstname","lastname","luggagePrice","history","props","userRequest","adult","child","infant","passengersAmount","Array","fill","pristine","submitting","handleSubmit","map","elem","index","propTypes","object","isRequired","func","mapStateToProps","state","user","request","mapDispatchToProps","dispatch","info"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { Form } from 'react-final-form';\nimport arrayMutators from 'final-form-arrays';\nimport { FieldArray } from 'react-final-form-arrays';\nimport PropTypes from 'prop-types';\nimport ExpandablePanel from './expandable-panel';\nimport { setPassengersInfo } from '../../redux/user/actions';\nimport './index.scss';\nimport Details from './expandable-panel/details';\nimport Header from './expandable-panel/header';\n\nclass PassengersList extends Component {\n  static propTypes = {\n    userRequest: PropTypes.object.isRequired,\n    setPassengersInfo: PropTypes.func.isRequired,\n  };\n\n  onSubmit = values => {\n    const passengers = {};\n    Object.keys(values).sort().forEach(function (key) {\n      passengers[key] = values[key];\n    });\n\n    const sortablePassengers = [];\n\n    for (let passenger in passengers) {\n      sortablePassengers.push(passengers[passenger]);\n    }\n\n    const passengersArray = [];\n    const passAmount = sortablePassengers.length/3;\n\n    for (let i = 0; i < passAmount; i++) {\n      const obj = {\n        firstname: sortablePassengers[i],\n        lastname: sortablePassengers[i+passAmount],\n        luggagePrice: sortablePassengers[i+passAmount*2]\n      }\n      passengersArray.push(obj);\n    }\n    const history = this.props.history;\n    this.props.setPassengersInfo(values);\n    this.props.setPassengersInfo(passengersArray);\n    return history.push('/passengers-seats');\n  };\n\n  render() {\n    const { adult, child, infant } = this.props.userRequest;\n    const passengersAmount = new Array((+adult || 0) + (+child || 0) + (+infant || 0)).fill(1);\n\n    return (\n      <Form\n        onSubmit={this.onSubmit}\n        mutators={{\n          ...arrayMutators,\n        }}\n        render={({ handleSubmit },\n          pristine, submitting) => (\n            <form onSubmit={handleSubmit}>\n              <FieldArray name=\"information\">\n                {() => (passengersAmount.map((elem, index) => (\n                  // <ExpandablePanel key={Math.random()} index={index} />\n                  <div className=\"expandable-panel\" key={index}>\n                    <Header index={index} />\n                    <Details index={index} />\n                  </div>\n                )))}\n              </FieldArray>\n              <button type=\"submit\" disabled={submitting || pristine}>\n                Confirm\n              </button>\n            </form>\n        )}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  userRequest: state.user.request,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setPassengersInfo: info => dispatch(setPassengersInfo(info)),\n});\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps),\n)(PassengersList);"]},"metadata":{},"sourceType":"module"}