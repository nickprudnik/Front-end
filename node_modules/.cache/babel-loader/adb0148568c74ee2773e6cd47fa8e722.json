{"ast":null,"code":"import actionTypes from '../actionTypes';\nimport axios from '../../../data';\n\nfunction getPlaneSchema(schema) {\n  return {\n    type: actionTypes.GET_PLANE_SCHEMA,\n    schema: schema\n  };\n}\n\nfunction hasErrored(bool) {\n  return {\n    type: actionTypes.PLANE_SCHEMA_HAS_ERRORED,\n    hasErrored: bool\n  };\n}\n\nexport default function fetchPlaneSchema(url) {\n  return function (dispatch) {\n    axios.get(url).then(function (response) {\n      if (!response.ok) {\n        throw Error('Info is not found');\n      }\n\n      return response;\n    }).then(function (response) {\n      return response.data;\n    }).then(function (schemas) {\n      return dispatch(getPlaneSchema(schemas[planeId]));\n    }).then(function () {\n      return dispatch(hasErrored(true));\n    });\n  };\n}","map":{"version":3,"sources":["D:\\Front-end\\Front-end\\src\\redux\\data\\plane-schema\\actions.js"],"names":["actionTypes","axios","getPlaneSchema","schema","type","GET_PLANE_SCHEMA","hasErrored","bool","PLANE_SCHEMA_HAS_ERRORED","fetchPlaneSchema","url","dispatch","get","then","response","ok","Error","data","schemas","planeId"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,eAAlB;;AAEA,SAASC,cAAT,CAAwBC,MAAxB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,gBADb;AAELF,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID;;AAED,SAASG,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAO;AACLH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,wBADb;AAELF,IAAAA,UAAU,EAAEC;AAFP,GAAP;AAID;;AAED,eAAe,SAASE,gBAAT,CAA0BC,GAA1B,EAA+B;AAC5C,SAAO,UAACC,QAAD,EAAc;AACnBV,IAAAA,KAAK,CAACW,GAAN,CAAUF,GAAV,EACGG,IADH,CACQ,UAACC,QAAD,EAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,cAAMC,KAAK,CAAC,mBAAD,CAAX;AACD;;AAED,aAAOF,QAAP;AACD,KAPH,EAQGD,IARH,CAQQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACG,IAAb;AAAA,KARhB,EASGJ,IATH,CASQ,UAAAK,OAAO;AAAA,aAAIP,QAAQ,CAACT,cAAc,CAACgB,OAAO,CAACC,OAAD,CAAR,CAAf,CAAZ;AAAA,KATf,EAUGN,IAVH,CAUQ;AAAA,aAAMF,QAAQ,CAACL,UAAU,CAAC,IAAD,CAAX,CAAd;AAAA,KAVR;AAWD,GAZD;AAaD","sourcesContent":["import actionTypes from '../actionTypes';\nimport axios from '../../../data';\n\nfunction getPlaneSchema(schema) {\n  return {\n    type: actionTypes.GET_PLANE_SCHEMA,\n    schema,\n  };\n}\n\nfunction hasErrored(bool) {\n  return {\n    type: actionTypes.PLANE_SCHEMA_HAS_ERRORED,\n    hasErrored: bool,\n  };\n}\n\nexport default function fetchPlaneSchema(url) {\n  return (dispatch) => {\n    axios.get(url)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error('Info is not found');\n        }\n\n        return response;\n      })\n      .then(response => response.data)\n      .then(schemas => dispatch(getPlaneSchema(schemas[planeId])))\n      .then(() => dispatch(hasErrored(true)));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}